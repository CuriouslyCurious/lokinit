use crate::keycode::KeyCode;

pub fn to_keycode(keysym: u32) -> Option<KeyCode> {
    Some(match keysym {
        0x31 => KeyCode::Key1,
        0x32 => KeyCode::Key2,
        0x33 => KeyCode::Key3,
        0x34 => KeyCode::Key4,
        0x35 => KeyCode::Key5,
        0x36 => KeyCode::Key6,
        0x37 => KeyCode::Key7,
        0x38 => KeyCode::Key8,
        0x39 => KeyCode::Key9,
        0x30 => KeyCode::Key0,

        0x7e => KeyCode::Tilde,
        0x60 => KeyCode::Backtick,
        0x21 => KeyCode::ExclamationMark,
        0x40 => KeyCode::At,
        0x23 => KeyCode::Hashtag,
        0x24 => KeyCode::Dollar,
        0x25 => KeyCode::Percent,
        0x5e => KeyCode::Caret,
        0x26 => KeyCode::Ampersand,
        0x2a => KeyCode::Asterisk,
        0x28 => KeyCode::LParens,
        0x29 => KeyCode::RParens,
        0x5f => KeyCode::Underscore,
        0x2d => KeyCode::Minus,
        0x2b => KeyCode::Plus,
        0x3d => KeyCode::Equals,
        0xff08 => KeyCode::Backspace,

        0x41 | 0x61 => KeyCode::A,
        0x42 | 0x62 => KeyCode::B,
        0x43 | 0x63 => KeyCode::C,
        0x44 | 0x64 => KeyCode::D,
        0x45 | 0x65 => KeyCode::E,
        0x46 | 0x66 => KeyCode::F,
        0x47 | 0x67 => KeyCode::G,
        0x48 | 0x68 => KeyCode::H,
        0x49 | 0x69 => KeyCode::I,
        0x4a | 0x6a => KeyCode::J,
        0x4b | 0x6b => KeyCode::K,
        0x4c | 0x6c => KeyCode::L,
        0x4d | 0x6d => KeyCode::M,
        0x4e | 0x6e => KeyCode::N,
        0x4f | 0x6f => KeyCode::O,
        0x50 | 0x70 => KeyCode::P,
        0x51 | 0x71 => KeyCode::Q,
        0x52 | 0x72 => KeyCode::R,
        0x53 | 0x73 => KeyCode::S,
        0x54 | 0x74 => KeyCode::T,
        0x55 | 0x75 => KeyCode::U,
        0x56 | 0x76 => KeyCode::V,
        0x57 | 0x77 => KeyCode::W,
        0x58 | 0x78 => KeyCode::X,
        0x59 | 0x79 => KeyCode::Y,
        0x5a | 0x7a => KeyCode::Z,

        0x20 => KeyCode::Space,

        0x5b => KeyCode::LBracket,
        0x5d => KeyCode::RBracket,
        0x7b => KeyCode::LBrace,
        0x7d => KeyCode::RBrace,
        0x7c => KeyCode::Pipe,
        0x5c => KeyCode::Backslash,
        0x3a => KeyCode::Colon,
        0x3b => KeyCode::Semicolon,
        0x22 => KeyCode::DoubleQuote,
        0x27 => KeyCode::SingleQuote,
        0x3c => KeyCode::LAngleBracket,
        0x3e => KeyCode::RAngleBracket,
        0x3f => KeyCode::QuestionMark,
        0x2c => KeyCode::Comma,
        0x2e => KeyCode::Point,
        0x2f => KeyCode::Slash,

        0xff09 => KeyCode::Tab,
        0xffe5 => KeyCode::CapsLock,
        0xff0d => KeyCode::Enter,

        0xffe1 => KeyCode::LShift,
        0xffe2 => KeyCode::RShift,
        0xffe3 => KeyCode::LCtrl,
        0xffe4 => KeyCode::RCtrl,
        0xffe9 => KeyCode::LAlt,
        0xfe03 => KeyCode::RAlt,

        0xffeb => KeyCode::LSuper,

        0xff51 => KeyCode::ArrowLeft,
        0xff52 => KeyCode::ArrowUp,
        0xff53 => KeyCode::ArrowRight,
        0xff54 => KeyCode::ArrowDown,

        0xff50 => KeyCode::Home,
        0xff55 => KeyCode::PageUp,
        0xff57 => KeyCode::End,
        0xff56 => KeyCode::PageDown,

        0xff1b => KeyCode::Escape,

        0xffbe => KeyCode::F1,
        0xffbf => KeyCode::F2,
        0xffc0 => KeyCode::F3,
        0xffc1 => KeyCode::F4,
        0xffc2 => KeyCode::F5,
        0xffc3 => KeyCode::F6,
        0xffc4 => KeyCode::F7,
        0xffc5 => KeyCode::F8,
        0xffc6 => KeyCode::F9,
        0xffc7 => KeyCode::F10,
        0xffc8 => KeyCode::F11,
        0xffc9 => KeyCode::F12,

        0xffff => KeyCode::Delete,

        0x1008ff14 => KeyCode::Play,
        0x1008ff15 => KeyCode::Stop,
        0x1008ff16 => KeyCode::PrevTrack,
        0x1008ff17 => KeyCode::NextTrack,

        0xff61 | 0xff15 => KeyCode::PrintScreen,

        _ => return None,
    })
}
