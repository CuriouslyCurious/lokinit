use crate::keycode::KeyCode;

pub fn to_keycode(keysym: u32) -> Option<KeyCode> {
    Some(match keysym {
        // Big thanks to Mozilla:
        // https://developer.mozilla.org/en-US/docs/web/api/ui_events/keyboard_event_code_values#code_values_on_mac
        // Mozilla's always there for me when the bad fruit company isn't <3
        0x00 => KeyCode::A,
        0x01 => KeyCode::S,
        0x02 => KeyCode::D,
        0x03 => KeyCode::F,
        0x04 => KeyCode::H,
        0x05 => KeyCode::G,
        0x06 => KeyCode::Z,
        0x07 => KeyCode::X,
        0x08 => KeyCode::C,
        0x09 => KeyCode::V,
        // 0x0A => ISO section?
        0x0B => KeyCode::B,
        0x0C => KeyCode::Q,
        0x0D => KeyCode::W,
        0x0E => KeyCode::E,
        0x0F => KeyCode::R,
        0x10 => KeyCode::Y,
        0x11 => KeyCode::T,
        0x12 => KeyCode::Key1,
        0x13 => KeyCode::Key2,
        0x14 => KeyCode::Key3,
        0x15 => KeyCode::Key4,
        0x16 => KeyCode::Key6,
        0x17 => KeyCode::Key5,
        0x18 => KeyCode::Equals,
        0x19 => KeyCode::Key9,
        0x1A => KeyCode::Key7,
        0x1B => KeyCode::Minus,
        0x1C => KeyCode::Key8,
        0x1D => KeyCode::Key0,
        0x1E => KeyCode::RBracket,
        0x1F => KeyCode::O,
        0x20 => KeyCode::U,
        0x21 => KeyCode::LBracket,
        0x22 => KeyCode::I,
        0x23 => KeyCode::P,
        0x24 => KeyCode::Enter,
        0x25 => KeyCode::L,
        0x26 => KeyCode::J,
        0x27 => KeyCode::SingleQuote,
        0x28 => KeyCode::K,
        0x29 => KeyCode::Semicolon,
        0x2A => KeyCode::Backslash,
        0x2B => KeyCode::Comma,
        0x2C => KeyCode::Slash,
        0x2D => KeyCode::N,
        0x2E => KeyCode::M,
        0x2F => KeyCode::Point,
        0x30 => KeyCode::Tab,
        0x31 => KeyCode::Space,
        0x32 => KeyCode::Backtick,
        0x33 => KeyCode::Backspace,
        // 0x34 => numpad enter on powerbook
        0x35 => KeyCode::Escape,
        0x36 => KeyCode::RCommand,
        0x37 => KeyCode::LCommand,
        0x38 => KeyCode::LShift,
        0x39 => KeyCode::CapsLock,
        0x3A => KeyCode::LAlt,
        0x3B => KeyCode::LCtrl,
        0x3C => KeyCode::RShift,
        0x3D => KeyCode::RAlt,
        0x3E => KeyCode::RCtrl,
        // 0x3F => nil
        // 0x40 => F17
        0x41 => KeyCode::NumpadDecimal,
        // 0x42 => nil
        0x43 => KeyCode::NumpadMultiply,
        // 0x44 => nil
        0x45 => KeyCode::NumpadAdd,
        // 0x46 => nil
        0x47 => KeyCode::NumLock,
        // 0x48 => volume up
        // 0x49 => volume down
        // 0x4A => mute volume
        0x4B => KeyCode::NumpadDivide,
        0x4C => KeyCode::NumpadEnter,
        // 0x4D => nil
        0x4E => KeyCode::NumpadSubtract,
        // 0x4F => F18
        // 0x50 => F19
        0x51 => KeyCode::NumpadEquals,
        0x52 => KeyCode::Numpad0,
        0x53 => KeyCode::Numpad1,
        0x54 => KeyCode::Numpad2,
        0x55 => KeyCode::Numpad3,
        0x56 => KeyCode::Numpad4,
        0x57 => KeyCode::Numpad5,
        0x58 => KeyCode::Numpad6,
        0x59 => KeyCode::Numpad7,
        // 0x5A => F20
        0x5B => KeyCode::Numpad8,
        0x5C => KeyCode::Numpad9,
        // 0x5D => JIS yen
        // 0x5E => JIS underscore
        0x5F => KeyCode::NumpadComma,
        0x60 => KeyCode::F5,
        0x61 => KeyCode::F6,
        0x62 => KeyCode::F7,
        0x63 => KeyCode::F3,
        0x64 => KeyCode::F8,
        0x65 => KeyCode::F9,
        // 0x66 => JIS eisu
        0x67 => KeyCode::F11,
        // 0x68 => JIS kana
        // 0x69 => F13
        // 0x6A => F16
        // 0x6B => F14
        // 0x6C => nil
        0x6D => KeyCode::F10,
        // 0x6E => context menu?
        0x6F => KeyCode::F12,
        // 0x70 => nil
        // 0x71 => F15
        // 0x72 => help or insert?
        0x73 => KeyCode::Home,
        0x74 => KeyCode::PageUp,
        0x75 => KeyCode::Delete,
        0x76 => KeyCode::F4,
        0x77 => KeyCode::End,
        0x78 => KeyCode::F2,
        0x79 => KeyCode::PageDown,
        0x7A => KeyCode::F1,
        0x7B => KeyCode::ArrowLeft,
        0x7C => KeyCode::ArrowRight,
        0x7D => KeyCode::ArrowDown,
        0x7E => KeyCode::ArrowUp,
        _ => return None,
    })
}
